"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/tutor-dashboard/feedback/page",{

/***/ "(app-pages-browser)/./src/services/tutor-dashboard.service.ts":
/*!*************************************************!*\
  !*** ./src/services/tutor-dashboard.service.ts ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TutorDashboardService: function() { return /* binding */ TutorDashboardService; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/.pnpm/axios@1.9.0/node_modules/axios/lib/axios.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.28_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\");\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\n/**\n * TutorDashboardService\n * Handles API calls related to the tutor dashboard\n */ class TutorDashboardService {\n    /**\n   * Get authentication headers for API requests\n   * @returns Headers object with authorization token\n   */ static getAuthHeaders() {\n        const token = localStorage.getItem(\"accessToken\");\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        if (token) {\n            headers[\"Authorization\"] = \"Bearer \".concat(token);\n        }\n        return headers;\n    }\n    /**\n   * Get tutor stats for dashboard\n   * @returns Promise with tutor stats\n   */ static async getTutorStats() {\n        try {\n            const headers = this.getAuthHeaders();\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/users/tutors/dashboard/stats\"), {\n                headers\n            });\n            return response.data;\n        } catch (error) {\n            console.error(\"Error fetching tutor stats:\", error);\n            // Return default stats if API fails\n            return {\n                rating: 0,\n                reviews: 0,\n                totalEarnings: 0,\n                monthlyEarnings: 0,\n                upcomingSessions: 0,\n                totalHours: 0,\n                completedSessions: 0,\n                subjects: []\n            };\n        }\n    }\n    /**\n   * Get upcoming sessions for the tutor\n   * @param limit Number of sessions to return\n   * @returns Promise with sessions data\n   */ static async getUpcomingSessions() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;\n        try {\n            const headers = this.getAuthHeaders();\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/tutors/sessions/my-sessions\"), {\n                headers\n            });\n            // Filter the sessions by status and limit the results on the client side\n            const upcomingSessions = response.data.filter((session)=>[\n                    \"scheduled\",\n                    \"confirmed\"\n                ].includes(session.status)).sort((a, b)=>new Date(a.startTime).getTime() - new Date(b.startTime).getTime()).slice(0, limit);\n            return upcomingSessions;\n        } catch (error) {\n            console.error(\"Error fetching upcoming sessions:\", error);\n            return [];\n        }\n    }\n    /**\n   * Get recent feedback provided by the tutor\n   * @param limit Number of feedback items to return\n   * @returns Promise with feedback data\n   */ static async getRecentFeedback() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;\n        try {\n            const headers = this.getAuthHeaders();\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/tutors/feedback/my-feedback\"), {\n                headers\n            });\n            // Process and limit the feedback data on the client side\n            const recentFeedback = response.data.sort((a, b)=>new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).slice(0, limit);\n            return recentFeedback;\n        } catch (error) {\n            console.error(\"Error fetching recent feedback:\", error);\n            return [];\n        }\n    }\n    /**\n   * Get assignments created by the tutor\n   * @param limit Number of assignments to return\n   * @returns Promise with assignments data\n   */ static async getRecentAssignments() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;\n        try {\n            const headers = this.getAuthHeaders();\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/tutors/assignments/my-assignments\"), {\n                headers\n            });\n            // Process and limit the assignments data on the client side\n            // Sort by due date with closest due dates first\n            const recentAssignments = response.data.sort((a, b)=>new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime()).slice(0, limit);\n            return recentAssignments;\n        } catch (error) {\n            console.error(\"Error fetching recent assignments:\", error);\n            return [];\n        }\n    }\n    /**\n   * Get completed sessions for the tutor\n   * @param limit Number of sessions to return\n   * @returns Promise with sessions data\n   */ static async getCompletedSessions() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;\n        try {\n            const headers = this.getAuthHeaders();\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/tutors/sessions/my-sessions\"), {\n                headers\n            });\n            // Filter to only include completed sessions and sort by most recent first\n            const completedSessions = response.data.filter((session)=>session.status === \"completed\").sort((a, b)=>new Date(b.endTime).getTime() - new Date(a.endTime).getTime()).slice(0, limit);\n            return completedSessions;\n        } catch (error) {\n            console.error(\"Error fetching completed sessions:\", error);\n            return [];\n        }\n    }\n    /**\n   * Calculate tutor statistics based on all available data\n   * @returns Promise with calculated statistics\n   */ static async calculateTutorStats() {\n        try {\n            // Get all sessions to calculate stats\n            const headers = this.getAuthHeaders();\n            const sessionsResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/tutors/sessions/my-sessions\"), {\n                headers\n            });\n            const allSessions = sessionsResponse.data;\n            // Get tutor's profile\n            const profileResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(API_URL, \"/users/tutors/profile/me\"), {\n                headers\n            });\n            const profile = profileResponse.data;\n            // Calculate stats from sessions data\n            const completedSessions = allSessions.filter((session)=>session.status === \"completed\");\n            const upcomingSessions = allSessions.filter((session)=>[\n                    \"scheduled\",\n                    \"confirmed\"\n                ].includes(session.status));\n            const totalHours = completedSessions.reduce((total, session)=>{\n                const start = new Date(session.startTime).getTime();\n                const end = new Date(session.endTime).getTime();\n                const hours = (end - start) / (1000 * 60 * 60); // Convert milliseconds to hours\n                return total + hours;\n            }, 0);\n            // Calculate monthly earnings (assuming sessions have a price field or using a default rate)\n            const currentMonth = new Date().getMonth();\n            const currentYear = new Date().getFullYear();\n            const thisMonthCompletedSessions = completedSessions.filter((session)=>{\n                const sessionDate = new Date(session.endTime);\n                return sessionDate.getMonth() === currentMonth && sessionDate.getFullYear() === currentYear;\n            });\n            // Assuming an average rate of $40/hour for calculation\n            const hourlyRate = 40;\n            const monthlyEarnings = thisMonthCompletedSessions.reduce((total, session)=>{\n                const start = new Date(session.startTime).getTime();\n                const end = new Date(session.endTime).getTime();\n                const hours = (end - start) / (1000 * 60 * 60);\n                return total + hours * hourlyRate;\n            }, 0);\n            const totalEarnings = completedSessions.reduce((total, session)=>{\n                const start = new Date(session.startTime).getTime();\n                const end = new Date(session.endTime).getTime();\n                const hours = (end - start) / (1000 * 60 * 60);\n                return total + hours * hourlyRate;\n            }, 0);\n            // Return calculated statistics\n            return {\n                rating: 4.5,\n                reviews: completedSessions.length,\n                totalEarnings: Math.round(totalEarnings),\n                monthlyEarnings: Math.round(monthlyEarnings),\n                upcomingSessions: sessions.length,\n                totalHours: Math.round(totalHours * 10) / 10,\n                completedSessions: completedSessions.length,\n                subjects: [\n                    \"Math\",\n                    \"Science\",\n                    \"English\"\n                ] // Placeholder subjects\n            };\n        } catch (error) {\n            console.error(\"Error calculating tutor stats:\", error);\n            return {\n                rating: 0,\n                reviews: 0,\n                totalEarnings: 0,\n                monthlyEarnings: 0,\n                upcomingSessions: 0,\n                totalHours: 0,\n                completedSessions: 0,\n                subjects: []\n            };\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/tutor-dashboard.service.ts\n"));

/***/ })

});